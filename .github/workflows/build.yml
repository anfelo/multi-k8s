# build.yml
on:
  pull_request:
    paths:
      - client/**
      - server/**
      - worker/**
  push:
    paths:
      - client/**
      - server/**
      - worker/**
    branches: # array of glob patterns matching against refs/heads. Optional; defaults to all
      - main # triggers on pushes that contain changes in main

name: Build and Push to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLIENT_CONTAINER_IMAGE: multi-client
  SERVER_CONTAINER_IMAGE: multi-server
  WORKER_CONTAINER_IMAGE: multi-worker
jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Add steps here like linting, testing, minification, etc.

      # - name: Setup ECR
      #   run: |
      #     # Login to AWS ECR
      #     $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
      - name: Build and tag the image
        run: |
          # Build and tag the image
          docker build \
            -t $CLIENT_CONTAINER_IMAGE:latest \
            -t $CLIENT_CONTAINER_IMAGE:${{ github.sha }} \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CLIENT_CONTAINER_IMAGE:${{ github.sha }} \
            -f ./client/Dockerfile ./client
            
            docker build \
            -t $SERVER_CONTAINER_IMAGE:latest \
            -t $SERVER_CONTAINER_IMAGE:${{ github.sha }} \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$SERVER_CONTAINER_IMAGE:${{ github.sha }} \
            -f ./server/Dockerfile ./server
            
            docker build \
            -t $WORKER_CONTAINER_IMAGE:latest \
            -t $WORKER_CONTAINER_IMAGE:${{ github.sha }} \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$WORKER_CONTAINER_IMAGE:${{ github.sha }} \
            -f ./worker/Dockerfile ./worker

      # Add additional steps here like scanning of image

      # Only push to registry on main
      - name: Push
        if: github.ref == 'refs/heads/main'
        run: |
          # Push image to AWS ECR
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CLIENT_CONTAINER_IMAGE:${{ github.sha }}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$SERVER_CONTAINER_IMAGE:${{ github.sha }}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$WORKER_CONTAINER_IMAGE:${{ github.sha }}
